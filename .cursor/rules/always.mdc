---
alwaysApply: true
---


# プロジェクト開発ルール

## 基本ルール

### Pythonコーディング
- **importは常にファイルの先頭で行う** (関数内import禁止)
- Lambda環境では try-except でインポート処理
- **DynamoDB Decimal型は必ずint/float型に変換してからJSONレスポンス**
- DynamoDB操作は必ずClientErrorをキャッチ

### コード品質
- **3回以上同じコードが出現したら共通関数として抽出**
- 類似処理は汎用的な関数として設計
- 適切なコメントとテスタブルな設計

### セキュリティ
- **全APIエンドポイントに認証チェック必須**
- アクセス権限チェックを適切に実装
- 入力値検証とXSS/SQLインジェクション対策

### エラーハンドリング
- 一貫したエラーレスポンス形式
- 詳細なログ出力 + ユーザーフレンドリーなメッセージ
- エラー種別ごとの適切なHTTPステータスコード

### フロントエンド
- API呼び出し時のローディング表示
- 権限なしページは適切にリダイレクト
- エラーハンドリングとアラート表示

### 共通化対象
1. データ変換処理 (Decimal→int等)
2. バリデーション処理 (メール、権限等)
3. エラーハンドリング
4. APIレスポンス生成
5. 認証・認可チェック

# フロントエンド作成ルール
APIの呼び出し時には画面全体を覆うローディングを表示すること。